<?php
namespace app\api\controller;

use think\Db;
use think\Model;
use think\Request;
use app\api\common\Base;
use app\api\model\AppInfo;

class Sys extends Base {
    public function signDetail(){
    $param=request()->param();
	$param=array_filter($param);
    //找到当前脚本所在路径
    $path = dirname(__FILE__); 
    //引入IOFactory.php 文件里面的PHPExcel_IOFactory这个类
    import('PHPExcel.Classes.PHPExcel');
    import('PHPExcel.Classes.PHPExcel.IOFactory.PHPExcel_IOFactory');
    $PHPExcel = new \PHPExcel();
    $PHPSheet = $PHPExcel->getActiveSheet();
    $PHPSheet->setTitle("报名列表");
    $PHPSheet->setCellValue("A1","医院名称");
    $PHPSheet->setCellValue("B1","医院等级");
    $PHPSheet->setCellValue("C1","*床位数");
    $PHPSheet->setCellValue("D1","*联系人");
    $PHPSheet->setCellValue("E1","*联系人电话");
    $PHPSheet->setCellValue("F1","联系人邮箱");
    $PHPSheet->setCellValue("G1","医院感染管理部门成立日期");
    $PHPSheet->setCellValue("H1","团队成员");

    $cellName = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',
    'AA','AB','AC','AD','AE','AF','AG','AH','AI','AJ','AK','AL','AM','AN','AO','AP','AQ','AR','AS','AT','AU','AV','AW','AX','AY','AZ');

    $convention_id=isset($param['_id'])?$param['_id']:0;
    $creator_id=isset($param['creator_id'])?$param['creator_id']:0;
    $fid=isset($param['fid'])?$param['fid']:0;
	//->wherein('abstract_id',$fid)
    $result = Db::table("v_paper_author")->where(["record_status"=>1,"convention_id"=>$convention_id])->select();
	//echo Db::table("v_paper_author")->getLastSql();die;
    $i=2;
    

        $list = Db::table('convention_sign_control')->select();
        $arr = [];
        foreach ($list as $vo) {
            $hospital_name=json_decode(str_replace('&quot;','"',$vo['hospital_name']),true);
            $contact=json_decode(str_replace('&quot;','"',$vo['contact']),true);
            $establishment=json_decode(str_replace('&quot;','"',$vo['establishment']),true);
            $team_members=json_decode(str_replace('&quot;','"',$vo['team_members']),true);
            $profession=json_decode(str_replace('&quot;','"',$vo['profession']),true);
            $training_status=json_decode(str_replace('&quot;','"',$vo['training_status']),true);
            $article_author=json_decode(str_replace('&quot;','"',$vo['article_author']),true);
            $part_time=json_decode(str_replace('&quot;','"',$vo['part_time']),true);
            $thematic_report=json_decode(str_replace('&quot;','"',$vo['thematic_report']),true);
            $monograph_list=json_decode(str_replace('&quot;','"',$vo['monograph_list']),true);
            $Honor=json_decode(str_replace('&quot;','"',$vo['Honor']),true);
            $highlight_event=json_decode(str_replace('&quot;','"',$vo['highlight_event']),true);
            $file_id=json_decode(str_replace('&quot;','"',$vo['file_id']),true);
            $sort=json_decode(str_replace('&quot;','"',$vo['sort']),true);
            $update_time=json_decode(str_replace('&quot;','"',$vo['update_time']),true);    
    
            $data = [
                '医院名称'=>$hospital_name['hospitalName'],
                '医院等级'=>$hospital_name['hospitalDec'],
                '床位数'=>$hospital_name['bedNum'],
                '联系人'=>$contact['contact_people'],
                '联系人电话'=>$contact['contact_phone'],
                '联系人邮箱'=>$contact['contact_email'],
                '医院感染管理部门成立日期'=>$establishment,
                '团队成员'=>$team_members,
            ];
            $arr[] = $data;

            
            $PHPSheet->setCellValue('A'.$i,''.$hospital_name['hospitalName'].'');
            $PHPSheet->setCellValue('B'.$i,''.$hospital_name['hospitalDec'].'');
            $PHPSheet->setCellValue('C'.$i,''.$hospital_name['bedNum'].'');
            $PHPSheet->setCellValue('D'.$i,''.$contact['contact_people'].'');
            $PHPSheet->setCellValue('E'.$i,''.$contact['contact_phone'].'');
            $PHPSheet->setCellValue('F'.$i,''.$contact['contact_email'].'');
            $PHPSheet->setCellValue('G'.$i,''.$establishment.'');
            $PHPSheet->setCellValue('H'.$i,''.$team_members.'');
            $i++;
        }
        ob_end_clean();//清除缓冲区,避免乱码
        $filename="SIFIC".date("Y");
        $filename=$filename."-$convention_id-摘要作者.xlsx";
        $PHPWriter = \PHPExcel_IOFactory::createWriter($PHPExcel,"Excel2007");
        header("Content-Disposition: attachment;filename=$filename");
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        //表示在$path路径下面生成demo.xlsx文件
        $PHPWriter->save("php://output");die;
        echo json_encode($arr);
    }
    
    /**
     * @return string|void
     * 版本检测接口
     */
    public function version_check() {
        $user_id = $this->request->get('user_id');
        $version = $this->request->get('version');
        $type = $this->request->get('type');
        
        $enduser_info = Db::table('enduser_info')->where(['fid'=>$user_id,'record_status'=>1])->find();
        $org_id = $enduser_info['org_id'];

        $version_new_list = [];
        //验证是否有可用的新版本
        $version_old = Db::table('version_info')->where(['type'=>$type,'version_no'=>$version,'status'=>1])->find();
        if (!empty($version_old)) {
            $version_id = $version_old['fid'];
            $version_list = Db::query('select * from version_info where type=$type and status=1 and fid>$version_id order by fid desc');     
            $version_ids = []; 
            if (count($version_list)>0) {
                foreach ($ver as $vo) {
                    $version_ids[] = $vo['fid'];
                }
                $version_dl_list = Db::table('version_dl_info')->wherein('version_id',$version_ids)->select();
                if (count($version_dl_list)>0) {
                    foreach ($version_dl_list as $version) {
                        $version_org_id = $version['org_id'];
                        $version_user_id = $version['user_id'];
                        $start_time = $version['start_time'];
                        $end_time = $version['end_time'];
                        $force_type = $version['force_type'];
                        $flag = false;
                        if ($version_org_id=0) {
                            # 所有人都可以下载
                            $flag = true;
                        }else if ($version_org_id>0 && $version_user_id=0){
                            # 指定部门的所有人员可以下载
                            $flag = true;
                        }else if ($version_org_id>0 && $version_user_id>0){
                            # 指定部门的指定人员可以下载
                            $flag = true;
                        }
                        if ($flag) {
                            $version_info = [
                                'force_type' => $version['force_type'],
                                'dl_pass' => $version['dl_pass'],
                                'memo' => $version['memo']
                            ];
                            $version_new_list[] = $version_info;
                        }
                    }
                }
            }

        }

        $data = [
            'code' => '200',
            'msg' => '获取成功',
            'data' => [
                'version_list' => $version_new_list
            ]
        ];
        echo  json_encode($data);exit;
    }

    /* 平台声明 */
    public function Explain(){
        $type = $this->request->get('type');
        if(empty($type) || !$type || $type!="sific"){
            $data = [
                'code' => '410',
                'msg' => '获取失败'
            ];
        }else{
            $explain_list=Db::table('base_explain_info')->where(['record_status'=>1])->find();
            $data = [
                'code' => '200',
                'msg' => '获取成功',
                'data' => [
                    'explain_list' => $explain_list
                ]
            ];
        }
        echo  json_encode($data);exit;
    }
    
}      